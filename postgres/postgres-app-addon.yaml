id: pgaddon
type: update
baseUrl: https://raw.githubusercontent.com/vlobzakov/k8s-mp/master
name: PostgreSQL Database
description: Deploy PostgreSQL Database and expose it out of K8s Cluster
logo: https://github.com/jelastic-jps/postgres/blob/master/images/postgres-70x70.png
targetNodes: kubernetes
onInstall: 
  - cmd[${nodes.k8sm.master.id}]: wget https://raw.githubusercontent.com/vlobzakov/k8s-mp/main/postgres/postgres-svc-ext-ip.yaml
#  - cmd[${nodes.k8sm.master.id}]: wget https://raw.githubusercontent.com/vlobzakov/k8s-mp/main/postgres/postgres-deploy.yaml
#  - cmd[${nodes.k8sm.master.id}]: wget https://raw.githubusercontent.com/vlobzakov/k8s-mp/main/postgres/postgres-secret.yaml
#  - cmd[${nodes.k8sm.master.id}]: sed -i s/POSTGRES_USER:\ cG9zdGdyZXM=/POSTGRES_USER:\ ${settings.db_user.toBase64()}/ postgres-secret.yaml
#  - cmd[${nodes.k8sm.master.id}]: sed -i s/POSTGRES_PASSWORD:\ cG9zdGdyZXM=/POSTGRES_PASSWORD:\ ${settings.db_pwd.toBase64()}/ postgres-secret.yaml

settings:
    fields:
        - type: displayfield
          caption: Useful info
          hideLabel: true
          markup: Provide info to access the cluster
        - type: string
          name: db_user
          caption: DB username
        - type: string
          name: db_pwd
          caption: DB password
          inputType: password
        - type: string
          name: deployName
          caption: Deployment Name
        - type: string
          name: svcName
          caption: Service Name
        - type: checkbox
          name: extIP
          caption: Remote DB access via Ext IP
        - type: checkbox
          name: endpoint
          caption: Remote DB access via Endpoint


buttons:
  - caption: Postgres K8s IP
    action: getsvcIP
    successText: /postgres/text/getsvcip.md
  - caption: Postgres VAP IP
    action: getmasterIP
    successText:  /postgres/text/getmasterip.md
  - caption: Set EndPoint
    action: setEndPoint
    successText:  /postgres/text/setendpoint.md

actions:
  getsvcIP:
     - cmd[${nodes.k8sm.master.id}]: kubectl get -o template service/postgres --template='{{.spec.clusterIP}}' 
     - setGlobals:
        intIPmsg: You may access PostgreSQL service by K8s internal IP ${response.out}
     - message.email.send:
          to: "${user.email}"
          subject: PostgreSQL Access whithin K8s Cluster
          body: ${globals.intIPmsg}
  getmasterIP:
     - setGlobals:
        vapIPmsg: You may access PostgreSQL service by VAP internal IP ${nodes.k8sm.master.intIP}]
  setEndPoint:
     - api : env.control.AddEndpoint
       nodeId: ${nodes.k8sm.master.id}
       privatePort: 32222
       protocol: TCP
       name: svcPort
     - setGlobals:  
         EndPointmsg: Now your PostgreSQL service is publicly accessible via SLB by **node${nodes.k8sm.master.id}-${env.domain}:${response.object.publicPort}**     

